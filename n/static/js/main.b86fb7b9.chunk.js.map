{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","app","initializeApp","database","_ref","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","className","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","Fragment","mdbreact_esm","label","icon","validate","success","group","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","placeholder","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","keys","map","off","Admin_UserList","UserList","App_Hamurger","react_router","exact","path","component","LandingPage","HomePage","AccountPage","Hamurger","openLeft","drawerStyle","width","noTouchOpen","noTouchClose","stringDrawerStyle","openRight","JSON","parse","err","console","drawerProps","overlayColor","drawer_default","right","open","components_Navigation","style","cursor","height","padding","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b86fb7b9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDWxEhLGpRL8PvoFLpPW41LK-Cpa2v78bo\",\r\n    authDomain: \"strona-e97f4.firebaseapp.com\",\r\n    databaseURL: \"https://strona-e97f4.firebaseio.com\",\r\n    projectId: \"strona-e97f4\",\r\n    storageBucket: \"strona-e97f4.appspot.com\",\r\n    messagingSenderId: \"110234915985\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n        this.db = app.database();\r\n    }\r\n\r\n    // *** Auth API ***\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n    doPasswordUpdate = password =>\r\n        this.auth.currentUser.updatePassword(password);\r\n\r\n    // *** User API ***\r\n\r\n    user = uid => this.db.ref(`users/${uid}`);\r\n\r\n    users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Wyloguj się\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n    class WithAuthentication extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                authUser: null,\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    authUser\r\n                        ? this.setState({ authUser })\r\n                        : this.setState({ authUser: null });\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Provider value={this.state.authUser}>\r\n                    <Component {...this.props} />\r\n                </AuthUserContext.Provider>\r\n            );\r\n        }\r\n    }\r\n\r\n    return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    if (!condition(authUser)) {\r\n                        this.props.history.push(ROUTES.SIGN_IN);\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Consumer>\r\n                    {authUser =>\r\n                        condition(authUser) ? <Component {...this.props} /> : null\r\n                    }\r\n                </AuthUserContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n    )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n    <div>\r\n        <AuthUserContext.Consumer>\r\n            {authUser =>\r\n                authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n            }\r\n        </AuthUserContext.Consumer>\r\n    </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n\r\n    <div className=\"navWrraper\">\r\n        <Link to={ROUTES.LANDING}>Landing</Link>\r\n\r\n        <Link to={ROUTES.HOME}>Home</Link>\r\n\r\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n\r\n        {/* <li>\r\n            <Link to={ROUTES.ADMIN}>Admin</Link>\r\n        </li> */}\r\n\r\n        <SignOutButton />\r\n\r\n    </div>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n    <ul>\r\n        <li>\r\n            <Link to={ROUTES.LANDING}>Landing</Link>\r\n        </li>\r\n        <li>\r\n            <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Landing = () => (\r\n    <div>\r\n        <h1>Landing</h1>\r\n    </div>\r\n);\r\n\r\nexport default Landing;","\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { MDBInput, MDBBtn } from 'mdbreact'\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n    <div>\r\n\r\n        <SignUpForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                // Utwórz użytkownika w bazie danych Firebase w czasie rzeczywistym\r\n                this.props.firebase\r\n                    .user(authUser.user.uid)\r\n                    .set({\r\n                        username,\r\n                        email,\r\n                    })\r\n                    .then(() => {\r\n                        this.setState({ ...INITIAL_STATE });\r\n                        this.props.history.push(ROUTES.HOME);\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ error });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <>\r\n                <form onSubmit={this.onSubmit}\r\n                >\r\n                    <p className=\"h5 text-center mb-4\">Zarejestruj się</p>\r\n                    <div className=\"grey-text\"></div>\r\n                    <MDBInput\r\n                        label=\"Podaj login\"\r\n                        icon=\"envelope\"\r\n                        validate\r\n                        error=\"wrong\"\r\n                        success=\"right\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n\r\n                    />\r\n                    <MDBInput\r\n                        label=\"Podaj email\"\r\n                        icon=\"envelope\"\r\n                        type=\"email\"\r\n                        validate\r\n                        error=\"wrong\"\r\n                        success=\"right\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n\r\n                    />\r\n                    <MDBInput\r\n                        label=\"Type your password\"\r\n                        icon=\"lock\"\r\n                        group\r\n                        type=\"password\"\r\n                        validate\r\n                        name=\"passwordOne\"\r\n                        value={passwordOne}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <MDBInput\r\n                        label=\"Type your password\"\r\n                        icon=\"lock\"\r\n                        group\r\n                        type=\"password\"\r\n                        validate\r\n                        name=\"passwordTwo\"\r\n                        value={passwordTwo}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn disabled={isInvalid} type=\"submit\">Zarejestruj</MDBBtn>\r\n                        {error && <p>{error.message}</p>}\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        Nie masz konta? <Link to={ROUTES.SIGN_UP}>Zarejestruj się</Link>\r\n    </p>\r\n);\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { MDBInput, MDBBtn } from 'mdbreact'\r\nconst PasswordForgetPage = () => (\r\n    <div>\r\n\r\n        <PasswordForgetForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordReset(email)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, error } = this.state;\r\n\r\n        const isInvalid = email === '';\r\n\r\n        return (\r\n            <div className=\"passwordForgetLink\">\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <p className=\"h5 text-center mb-4\">Nie pamiętasz hasła?</p>\r\n                    <p>Wyślemy do Ciebie wiadomość e-mail z linkiem do strony umożliwiającej zmianę hasła.</p>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput\r\n                            label=\"Podaj email\"\r\n                            icon=\"envelope\"\r\n                            type=\"text\"\r\n                            validate\r\n                            error=\"wrong\"\r\n                            success=\"right\"\r\n                            name=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <MDBBtn disabled={isInvalid} type=\"submit\">Login</MDBBtn>\r\n                        {error && <p>{error.message}</p>}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n    <p>\r\n        <Link to={ROUTES.PASSWORD_FORGET}>Zapomniałeś hasła?</Link>\r\n    </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { MDBInput, MDBBtn } from 'mdbreact'\r\n\r\nconst SignInPage = () => (\r\n    <div className=\"signIn\">\r\n        <SignInForm />\r\n        <PasswordForgetLink />\r\n        <SignUpLink />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '';\r\n\r\n        return (\r\n            <>\r\n                <div className=\"formLogin\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <p className=\"h5 text-center mb-4\">Zaloguj się</p>\r\n                        <div className=\"grey-text\">\r\n                            <MDBInput\r\n                                label=\"Podaj email\"\r\n                                icon=\"envelope\"\r\n                                type=\"email\"\r\n                                validate\r\n                                error=\"wrong\"\r\n                                success=\"right\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            <MDBInput\r\n                                label=\"Type your password\"\r\n                                icon=\"lock\"\r\n                                group\r\n                                type=\"password\"\r\n                                validate\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={this.onChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn disabled={isInvalid} type=\"submit\">Login</MDBBtn>\r\n                            {error && <p>{error.message}</p>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","\r\n\r\n\r\nimport { withAuthorization } from '../Session';\r\nimport React, { Component } from \"react\";\r\nconst HomePage = () => (\r\n  <>\r\n    <h1>HOME</h1>\r\n  </>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordUpdate(passwordOne)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                />\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    value={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Reset My Password\r\n        </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst AccountPage = () => (\r\n    <AuthUserContext.Consumer>\r\n        {authUser => (\r\n            <div>\r\n                <h1>Account: {authUser.email}</h1>\r\n                <PasswordForgetForm />\r\n                <PasswordChangeForm />\r\n            </div>\r\n        )}\r\n    </AuthUserContext.Consumer>\r\n);\r\n\r\nconst authCondition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(AccountPage);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            users: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.users().on('value', snapshot => {\r\n            const usersObject = snapshot.val();\r\n\r\n            const usersList = Object.keys(usersObject).map(key => ({\r\n                ...usersObject[key],\r\n                uid: key,\r\n            }));\r\n\r\n            this.setState({\r\n                users: usersList,\r\n                loading: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.users().off();\r\n    }\r\n\r\n    render() {\r\n        const { users, loading } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Admin</h1>\r\n\r\n                {loading && <div>Loading ...</div>}\r\n\r\n                <UserList users={users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n    <ul>\r\n        {users.map(user => (\r\n            <li key={user.uid}>\r\n                <span>\r\n                    <strong>ID:</strong> {user.uid}\r\n                </span>\r\n                <span>\r\n                    <strong>E-Mail:</strong> {user.email}\r\n                </span>\r\n                <span>\r\n                    <strong>Username:</strong> {user.username}\r\n                </span>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n//MDB npm install --save mdbreact\r\n// Import style files into the src/index.js before the App.js file:\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n// import \"bootstrap-css-only/css/bootstrap.min.css\";\r\n// import \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"../../index.scss\";\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\nimport Drawer from 'react-motion-drawer';\r\nconst App = () => (\r\n    <Router>\r\n        <div>\r\n            <Hamurger />\r\n            <hr />\r\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n            <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n            <Route\r\n                exact\r\n                path={ROUTES.PASSWORD_FORGET}\r\n                component={PasswordForgetPage}\r\n            />\r\n            <Route exact path={ROUTES.HOME} component={HomePage} />\r\n            <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n\r\nclass Hamurger extends Component {\r\n    state = {\r\n        openLeft: false,\r\n        drawerStyle: `\r\n  {\r\n    \"background\": \"#fff\",\r\n    \"boxShadow\": \"rgba(0, 0, 0, 0.188235) 0px 10px 20px, rgba(0, 0, 0, 0.227451) 0px 6px 6px\"\r\n  }`,\r\n\r\n        width: \"70%\",\r\n        noTouchOpen: false,\r\n        noTouchClose: false,\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            drawerStyle: stringDrawerStyle,\r\n            openLeft,\r\n            openRight,\r\n            noTouchOpen,\r\n            noTouchClose\r\n        } = this.state;\r\n\r\n        let drawerStyle = {}\r\n        try {\r\n            drawerStyle = JSON.parse(stringDrawerStyle)\r\n        } catch (err) {\r\n            console.error('Error parsing JSON: ', err)\r\n        }\r\n\r\n        const drawerProps = {\r\n            overlayColor: \"rgba(255,255,255,0.6)\",\r\n            drawerStyle\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {!openLeft &&\r\n                    <Drawer\r\n                        right\r\n                        width={this.state.width}\r\n                        {...drawerProps}\r\n                        open={openRight}\r\n                        onChange={open => this.setState({ openRight: open })}\r\n                        noTouchOpen={noTouchOpen}\r\n                        noTouchClose={noTouchClose}\r\n                    >\r\n                        <Navigation />\r\n                    </Drawer>}\r\n                <div className=\"navbar-fixed\">\r\n                    <nav>\r\n                        <div className=\"   \">\r\n                            <ul className=\"right\">\r\n                                <li style={{ cursor: \"pointer\", height: \"100%\" }} onClick={() =>\r\n                                    this.setState({ openRight: !openRight, openLeft: false })}>\r\n                                    {!openRight ? <i style={{ padding: 10 }}\r\n                                        className=\"fa fa-bars\" /> : false}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}